%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Hjson
file_extensions:
  - hjson
scope: source.hjson
contexts:
  main:
    - include: comments
    - include: value
    - match: '[^\s]+'
      scope: invalid.illegal.excess-characters.hjson
  array:
    - match: '\['
      captures:
        0: punctuation.definition.array.begin.hjson
      push:
        - meta_scope: meta.structure.array.hjson
        - match: '(\])(?:\s*([^,\s].*)$)?'
          captures:
            1: punctuation.definition.array.end.hjson
            2: invalid.illegal.value.hjson
          pop: true
        - include: arrayContent
  arrayArray:
    - match: '\['
      captures:
        0: punctuation.definition.array.begin.hjson
      push:
        - meta_scope: meta.structure.array.hjson
        - match: '(\])(?:\s*([^,\s\]].*)$)?'
          captures:
            1: punctuation.definition.array.end.hjson
            2: invalid.illegal.value.hjson
          pop: true
        - include: arrayContent
  arrayConstant:
    - match: '\b(true|false|null)(?:[\t ]*(?=,)|[\t ]*(?:(,)[\t ]*)?(?=$|#|/\*|//|\]))'
      captures:
        1: constant.language.hjson
        2: punctuation.separator.array.after-const.hjson
  arrayContent:
    - include: comments
    - include: arrayValue
    - match: '(?<=\[)|,'
      captures:
        1: punctuation.separator.dictionary.pair.hjson
      push:
        - match: '(?=[^\s,/#])|(?=/[^/*])'
          pop: true
        - include: comments
        - match: ","
          scope: invalid.illegal.extra-comma.hjson
    - match: ","
      scope: punctuation.separator.array.hjson
    - match: '[^\s\]]'
      scope: invalid.illegal.expected-array-separator.hjson
  arrayJstring:
    - match: '"'
      captures:
        0: punctuation.definition.string.begin.hjson
      push:
        - meta_scope: string.quoted.double.hjson
        - match: '(")(?:\s*((?:[^,\s\]#/]|/[^/*]).*)$)?'
          captures:
            1: punctuation.definition.string.end.hjson
            2: invalid.illegal.value.hjson
          pop: true
        - include: jstringDoubleContent
    - match: "'"
      captures:
        0: punctuation.definition.string.begin.hjson
      push:
        - meta_scope: string.quoted.single.hjson
        - match: '('')(?:\s*((?:[^,\s\]#/]|/[^/*]).*)$)?'
          captures:
            1: punctuation.definition.string.end.hjson
            2: invalid.illegal.value.hjson
          pop: true
        - include: jstringSingleContent
  arrayMstring:
    - match: "'''"
      captures:
        0: punctuation.definition.string.begin.hjson
      push:
        - meta_scope: string.quoted.multiline.hjson
        - match: '('''''')(?:\s*((?:[^,\s\]#/]|/[^/*]).*)$)?'
          captures:
            1: punctuation.definition.string.end.hjson
            2: invalid.illegal.value.hjson
          pop: true
  arrayNumber:
    - match: '(-?(?:0|(?:[1-9]\d*))(?:\.\d+)?(?:[eE][+-]?\d+)?)(?:[\t ]*(?=,)|[\t ]*(?:(,)[\t ]*)?(?=$|#|/\*|//|\]))'
      captures:
        1: constant.numeric.hjson
        2: punctuation.separator.array.after-num.hjson
  arrayObject:
    - match: '\{'
      captures:
        0: punctuation.definition.dictionary.begin.hjson
      push:
        - meta_scope: meta.structure.dictionary.hjson
        - match: '(\}|(?<=\}))(?:\s*([^,\s\]].*)$)?'
          captures:
            1: punctuation.definition.dictionary.end.hjson
            2: invalid.illegal.value.hjson
          pop: true
        - include: objectContent
  arrayString:
    - include: arrayMstring
    - include: arrayJstring
    - include: ustring
  arrayValue:
    - include: arrayNumber
    - include: arrayConstant
    - include: arrayString
    - include: arrayObject
    - include: arrayArray
  comments:
    - match: ^\s*(#).*(?:\n)?
      scope: comment.line.hash
      captures:
        1: punctuation.definition.comment.hjson
    - match: ^\s*(//).*(?:\n)?
      scope: comment.line.double-slash
      captures:
        1: punctuation.definition.comment.hjson
    - match: ^\s*/\*
      captures:
        1: punctuation.definition.comment.hjson
      push:
        - meta_scope: comment.block.double-slash
        - match: \*/(?:\s*\n)?
          captures:
            1: punctuation.definition.comment.hjson
          pop: true
    - match: '(#)[^\n]*'
      scope: comment.line.hash
      captures:
        1: punctuation.definition.comment.hjson
    - match: '(//)[^\n]*'
      scope: comment.line.double-slash
      captures:
        1: punctuation.definition.comment.hjson
    - match: /\*
      captures:
        1: punctuation.definition.comment.hjson
      push:
        - meta_scope: comment.block.double-slash
        - match: \*/
          captures:
            1: punctuation.definition.comment.hjson
          pop: true
  constant:
    - match: '\b(true|false|null)[\t ]*(?=$|#|/\*|//|\])'
      captures:
        1: constant.language.hjson
  jstring:
    - match: '"'
      captures:
        0: punctuation.definition.string.begin.hjson
      push:
        - meta_scope: string.quoted.double.hjson
        - match: '(")(?:\s*((?:[^\s#/]|/[^/*]).*)$)?'
          captures:
            1: punctuation.definition.string.end.hjson
            2: invalid.illegal.value.hjson
          pop: true
        - include: jstringDoubleContent
    - match: "'"
      captures:
        0: punctuation.definition.string.begin.hjson
      push:
        - meta_scope: string.quoted.single.hjson
        - match: '('')(?:\s*((?:[^\s#/]|/[^/*]).*)$)?'
          captures:
            1: punctuation.definition.string.end.hjson
            2: invalid.illegal.value.hjson
          pop: true
        - include: jstringSingleContent
  jstringDoubleContent:
    - match: '\\(?:["''\\\/bfnrt]|u[0-9a-fA-F]{4})'
      scope: constant.character.escape.hjson
    - match: \\.
      scope: invalid.illegal.unrecognized-string-escape.hjson
    - match: '[^"]*[^\n\r"\\]$'
      scope: invalid.illegal.string.hjson
  jstringSingleContent:
    - match: '\\(?:["''\\\/bfnrt]|u[0-9a-fA-F]{4})'
      scope: constant.character.escape.hjson
    - match: \\.
      scope: invalid.illegal.unrecognized-string-escape.hjson
    - match: '[^'']*[^\n\r''\\]$'
      scope: invalid.illegal.string.hjson
  key:
    - match: |-
        (?x:
          (
            (?:[^:,\{\}\[\]\s"'][^:,\{\}\[\]\s]*) |
            (?: # json string w/ '
              '
              (?:
                [^\\'] | # anything but an escape character or quote
                (\\(?:["'\\\/bfnrt]|u[0-9a-fA-F]{4})) | # escape characters
                (\\.) # bad escape characters
              )*
              '
            ) |
            (?: # json string w/ "
              "
              (?:
                [^\\"] | # anything but an escape character or quote
                (\\(?:["'\\\/bfnrt]|u[0-9a-fA-F]{4})) | # escape characters
                (\\.) # bad escape characters
              )*
              "
            )
          )
          \s*
          (?!\n)
        )
      captures:
        0: meta.structure.key-value.begin.hjson
        1: support.type.property-name.hjson
        2: constant.character.escape.hjson
        3: invalid.illegal.unrecognized-string-escape.hjson
        4: constant.character.escape.hjson
        5: invalid.illegal.unrecognized-string-escape.hjson
        6: invalid.illegal.separator.hjson
      push:
        - match: (?<!^|:)\s*\n
          pop: true
        - include: keyValue
        - include: keyNewlineValue
        - include: keyNewline
        - match: '[^\s]+'
          scope: invalid.illegal.object-property.hjson
  keyNewline:
    - match: |-
        (?x:
          \s+ # capture the line ending
        )
      push:
        - meta_scope: meta.structure.key-newline.hjson
        - match: '^\s*:'
          captures:
            0: punctuation.separator.dictionary.key-value.hjson
          pop: true
        - match: \s+
        - match: '[^\s]+'
          scope: invalid.illegal.object-property.hjson
  keyNewlineValue:
    - match: (?<=:)(?:\s*\n)?
      push:
        - meta_scope: meta.strucure.key-newline-value.hjson
        - match: '(?<!^)\s*(?=\n)|(\})|(,)'
          captures:
            1: meta.structure.key-value-value.end.hjson
            2: punctuation.separator.dictionary.pair.hjson
          pop: true
        - include: comments
        - match: ^\s+
        - include: objectValue
        - match: '[^\s]+'
          scope: invalid.illegal.object-property.hjson
  keyValue:
    - match: |-
        (?x:
          \s*
          (:)
          \s* # capture the line ending if there is no value on the same line
          (\})?
        )
      captures:
        1: punctuation.separator.dictionary.key-value.hjson
        2: invalid.illegal.object-property.closing-bracket.hjson
      push:
        - meta_scope: meta.structure.key-value.hjson
        - match: '(?<!^)\s*(?=\n)|(\})|(,)'
          captures:
            1: meta.structure.key-value.end.hjson
            2: punctuation.separator.dictionary.pair.hjson
          pop: true
        - include: comments
        - match: ^\s+
        - include: objectValue
        - match: '^\s*(\})'
          captures:
            1: invalid.illegal.object-property.closing-bracket.hjson
        - match: '[^\s]+'
          scope: invalid.illegal.object-property.hjson
  mstring:
    - match: "'''"
      captures:
        0: punctuation.definition.string.begin.hjson
      push:
        - meta_scope: string.quoted.multiline.hjson
        - match: '('''''')(?:\s*((?:[^\s#/]|/[^/*]).*)$)?'
          captures:
            1: punctuation.definition.string.end.hjson
            2: invalid.illegal.value.hjson
          pop: true
  number:
    - match: '(-?(?:0|(?:[1-9]\d*))(?:\.\d+)?(?:[eE][+-]?\d+)?)[\t ]*(?=$|#|/\*|//|\])'
      captures:
        1: constant.numeric.hjson
  object:
    - match: '\{'
      captures:
        0: punctuation.definition.dictionary.begin.hjson
      push:
        - meta_scope: meta.structure.dictionary.hjson
        - match: '(\}|(?<=\}))(?:\s*([^,\s].*)$)?'
          captures:
            1: punctuation.definition.dictionary.end.hjson
            2: invalid.illegal.value.hjson
          pop: true
        - include: objectContent
  objectArray:
    - match: '\['
      captures:
        0: punctuation.definition.array.begin.hjson
      push:
        - meta_scope: meta.structure.array.hjson
        - match: '(\])(?:\s*([^,\s\}].*)$)?'
          captures:
            1: punctuation.definition.array.end.hjson
            2: invalid.illegal.value.hjson
          pop: true
        - include: arrayContent
  objectConstant:
    - match: '\b(true|false|null)(?:[\t ]*(?=,)|[\t ]*(?:(,)[\t ]*)?(?=$|#|/\*|//|\}))'
      captures:
        1: constant.language.hjson
        2: punctuation.separator.dictionary.pair.after-const.hjson
  objectContent:
    - include: comments
    - include: key
    - match: ':[.|\s]'
      scope: invalid.illegal.object-property.hjson
    - match: '(?<=\{|,)|,'
      captures:
        1: punctuation.separator.dictionary.pair.hjson
      push:
        - match: '(?=[^\s,/#])|(?=/[^/*])'
          pop: true
        - include: comments
        - match: ","
          scope: invalid.illegal.extra-comma.hjson
    - match: '[^\s]+'
      scope: invalid.illegal.object-property.hjson
  objectJstring:
    - match: '"'
      captures:
        0: punctuation.definition.string.begin.hjson
      push:
        - meta_scope: string.quoted.double.hjson
        - match: '(")(?:\s*((?:[^,\s\}#/]|/[^/*]).*)$)?'
          captures:
            1: punctuation.definition.string.end.hjson
            2: invalid.illegal.value.hjson
          pop: true
        - include: jstringDoubleContent
    - match: "'"
      captures:
        0: punctuation.definition.string.begin.hjson
      push:
        - meta_scope: string.quoted.single.hjson
        - match: '('')(?:\s*((?:[^,\s\}#/]|/[^/*]).*)$)?'
          captures:
            1: punctuation.definition.string.end.hjson
            2: invalid.illegal.value.hjson
          pop: true
        - include: jstringSingleContent
  objectMstring:
    - match: "'''"
      captures:
        0: punctuation.definition.string.begin.hjson
      push:
        - meta_scope: string.quoted.multiline.hjson
        - match: '('''''')(?:\s*((?:[^,\s\}#/]|/[^/*]).*)$)?'
          captures:
            1: punctuation.definition.string.end.hjson
            2: invalid.illegal.value.hjson
          pop: true
  objectNumber:
    - match: '(-?(?:0|(?:[1-9]\d*))(?:\.\d+)?(?:[eE][+-]?\d+)?)(?:[\t ]*(?=,)|[\t ]*(?:(,)[\t ]*)?(?=$|#|/\*|//|\}))'
      captures:
        1: constant.numeric.hjson
        2: punctuation.separator.dictionary.pair.after-num.hjson
  objectObject:
    - match: '\{'
      captures:
        0: punctuation.definition.dictionary.begin.hjson
      push:
        - meta_scope: meta.structure.dictionary.hjson
        - match: '(\}|(?<=\})\}?)(?:\s*([^,\s}].*)$)?'
          captures:
            1: punctuation.definition.dictionary.end.hjson
            2: invalid.illegal.value.hjson
          pop: true
        - include: objectContent
  objectString:
    - include: objectMstring
    - include: objectJstring
    - include: ustring
  objectValue:
    - include: objectNumber
    - include: objectConstant
    - include: objectString
    - include: objectObject
    - include: objectArray
  string:
    - include: mstring
    - include: jstring
    - include: ustring
  ustring:
    - match: '([^:,\{\[\}\]\s].*)$'
      scope: string.quoted.none.hjson
  value:
    - include: number
    - include: constant
    - include: string
    - include: object
    - include: array
